{"mappings":";;;;;;;;;;ACAA,MAAM,4BAAM;AAEZ,MAAM,gCAAU,OAAO;IACnB,MAAM,MAAO,2BAAK;QAChB,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,UAAU;IACvB;AACJ;IACA,2CAAe;;;ADRf,MAAM,kCAAY,OAAO,OAAO,SAAS,UAAU,CAAC,CAAC;IAEnD,MAAM,SAAS;QAAC;QAAS;QAAQ;QAAQ;QAAS;QAAW;QAAQ;KAAQ;IAC7E,IAAI,CAAC,OAAO,SAAS,QACnB,OAAO,QAAQ,IAAI;IAGrB,IAAK,MAAM,OAAO,QAChB,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAC1B,OAAO,CAAC,IAAI,GAAG;IAInB,MAAM,SAAS;eACb;iBACA;QACE,MAAO;qBACL;QACF;IACJ;IAEA,CAAA,GAAA,wCAAM,EAAE;AACV;IAEA,2CAAe","sources":["index.js","postLog.js"],"sourcesContent":["import postLog from './postLog.js';\n\n\nconst createLog = async (level, message, Context = {}) => {\n  \n  const levels = ['error', 'warn', 'http', 'debug', 'verbose', 'info', 'silly'];\n  if (!levels.includes(level)) {\n    return console.log('Invalid Level');\n  }\n\n  for (const key in Context) {\n    if (typeof Context[key] === 'object') {\n      Context[key] = 'INVALID CONTEXT';\n    }\n  }\n\n  const params = {\n    level,\n    message,\n      meta : {\n        Context\n      }\n  }\n  \n  postLog(params);\n};\n\nexport default createLog; ","const api = 'http://localhost:8080/api/logs';\n\nconst postLog = async (params) => {\n    await fetch (api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n}\nexport default postLog;"],"names":[],"version":3,"file":"index.cjs.map"}